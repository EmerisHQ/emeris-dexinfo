
import Fastify, { FastifyInstance, RouteShorthandOptions } from 'fastify'
import fastifySwagger from "fastify-swagger";
import { GravityDexSource } from './sources/gravitydex'
import { routes } from "./routes";
import SwapDB from './SwapDB';
import { EmerisDEXInfo } from '@emeris/types';
import { OsmosisSource } from './sources/osmosis';
import DenomDB from './DenomDB';

const server: FastifyInstance = Fastify({})



server.register(fastifySwagger, {
  routePrefix: "/apidocs",
  exposeRoute: true,
  swagger: {
    info: {
      title: "Emeris DEX Info API",
      description:
        "RESTful API with Node.js, Fastify, TypeScript and autogenerated Swagger for accessing DEX information",
      version: "1.0.0",
    },
    externalDocs: {
      url: "https://swagger.io",
      description: "Find more info here",
    },
    consumes: ["application/json"],
    produces: ["application/json"],
  },
});


const start = async () => {

  routes.forEach((route) => {
    route.add(server);
  });
  await DenomDB.isLoaded();
  const gdex = new GravityDexSource('https://api.emeris.com/v1/liquidity', true, 5000);
  gdex.on('swaps', (data) => { SwapDB.update(EmerisDEXInfo.DEX.Gravity, data) });
  const osmo = new OsmosisSource('https://lcd-osmosis.keplr.app', true, 5000);
  osmo.on('swaps', (data) => { SwapDB.update(EmerisDEXInfo.DEX.Osmosis, data) });
  try {
    await server.listen(3000);
    server.swagger();
  } catch (err) {
    console.log(err)
    process.exit(1)
  }
}
start()